// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders list correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    bounces={false}
    contentContainerStyle={false}
    data={
      Array [
        Object {
          "id": 1,
          "name": "artur",
        },
        Object {
          "id": 2,
          "name": "alex",
        },
        Object {
          "id": 3,
          "name": "pierre",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    overScrollMode="never"
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={10}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "elevation": -1,
        "height": "100%",
        "zIndex": 0,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomWidth": 0.5,
                "borderColor": "#c9c9c9",
                "flexDirection": "row",
                "marginLeft": 16,
                "paddingBottom": 13,
                "paddingRight": 16,
                "paddingTop": 13,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": null,
                  "alignSelf": null,
                  "flex": 1,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "marginLeft": 10,
                      "marginRight": 10,
                    },
                    Object {
                      "marginLeft": 0,
                    },
                  ]
                }
                uppercase={false}
              >
                artur
              </Text>
              <Text
                note={true}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#808080",
                      "fontFamily": "System",
                      "fontSize": 14,
                      "fontWeight": "200",
                      "marginLeft": 10,
                      "marginRight": 10,
                    },
                    Object {
                      "marginLeft": 0,
                    },
                  ]
                }
                uppercase={false}
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "alignSelf": "center",
                  "flex": 0.28,
                  "paddingBottom": null,
                  "paddingLeft": null,
                  "paddingRight": null,
                  "paddingTop": null,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#000",
                          "fontSize": 30,
                        },
                        Object {
                          "alignSelf": null,
                          "color": "#c9c8cd",
                          "fontSize": 22,
                        },
                        Object {
                          "color": "#673AB7",
                          "fontSize": 22,
                        },
                      ],
                      Object {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomWidth": 0.5,
                "borderColor": "#c9c9c9",
                "flexDirection": "row",
                "marginLeft": 16,
                "paddingBottom": 13,
                "paddingRight": 16,
                "paddingTop": 13,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": null,
                  "alignSelf": null,
                  "flex": 1,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "marginLeft": 10,
                      "marginRight": 10,
                    },
                    Object {
                      "marginLeft": 0,
                    },
                  ]
                }
                uppercase={false}
              >
                alex
              </Text>
              <Text
                note={true}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#808080",
                      "fontFamily": "System",
                      "fontSize": 14,
                      "fontWeight": "200",
                      "marginLeft": 10,
                      "marginRight": 10,
                    },
                    Object {
                      "marginLeft": 0,
                    },
                  ]
                }
                uppercase={false}
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "alignSelf": "center",
                  "flex": 0.28,
                  "paddingBottom": null,
                  "paddingLeft": null,
                  "paddingRight": null,
                  "paddingTop": null,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#000",
                          "fontSize": 30,
                        },
                        Object {
                          "alignSelf": null,
                          "color": "#c9c8cd",
                          "fontSize": 22,
                        },
                        Object {
                          "color": "#673AB7",
                          "fontSize": 22,
                        },
                      ],
                      Object {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderBottomWidth": 0.5,
                "borderColor": "#c9c9c9",
                "flexDirection": "row",
                "marginLeft": 16,
                "paddingBottom": 13,
                "paddingRight": 16,
                "paddingTop": 13,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": null,
                  "alignSelf": null,
                  "flex": 1,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "marginLeft": 10,
                      "marginRight": 10,
                    },
                    Object {
                      "marginLeft": 0,
                    },
                  ]
                }
                uppercase={false}
              >
                pierre
              </Text>
              <Text
                note={true}
                numberOfLines={1}
                style={
                  Array [
                    Object {
                      "color": "#808080",
                      "fontFamily": "System",
                      "fontSize": 14,
                      "fontWeight": "200",
                      "marginLeft": 10,
                      "marginRight": 10,
                    },
                    Object {
                      "marginLeft": 0,
                    },
                  ]
                }
                uppercase={false}
              />
            </View>
            <View
              style={
                Object {
                  "alignItems": "flex-end",
                  "alignSelf": "center",
                  "flex": 0.28,
                  "paddingBottom": null,
                  "paddingLeft": null,
                  "paddingRight": null,
                  "paddingTop": null,
                }
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <Text
                  allowFontScaling={false}
                  style={
                    Array [
                      Object {
                        "color": undefined,
                        "fontSize": 12,
                      },
                      Array [
                        Object {
                          "color": "#000",
                          "fontSize": 30,
                        },
                        Object {
                          "alignSelf": null,
                          "color": "#c9c8cd",
                          "fontSize": 22,
                        },
                        Object {
                          "color": "#673AB7",
                          "fontSize": 22,
                        },
                      ],
                      Object {
                        "fontFamily": "Ionicons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`shows blank state if list is empty 1`] = `
<View
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "elevation": 0,
        "flex": 1,
        "paddingBottom": 8,
        "paddingLeft": 8,
        "paddingRight": 8,
        "paddingTop": 8,
        "position": "absolute",
        "transform": Array [
          Object {
            "translateY": -0,
          },
        ],
        "width": "100%",
        "zIndex": 1,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "transparent",
          "borderBottomWidth": 1,
          "borderColor": "#D9D5DC",
          "borderLeftWidth": 1,
          "borderRadius": 30,
          "borderRightWidth": 1,
          "borderTopWidth": 1,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginLeft": 2,
          "opacity": 1,
        }
      }
    >
      <Text
        active={true}
        allowFontScaling={false}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            Array [
              Object {
                "color": "#000",
                "fontSize": 30,
              },
              Object {
                "color": "#000",
                "fontSize": 24,
                "paddingLeft": 10,
                "paddingRight": 8,
              },
            ],
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
      <TextInput
        allowFontScaling={true}
        editable={true}
        onChangeText={[Function]}
        placeholder="Поиск"
        placeholderTextColor="#575757"
        style={
          Object {
            "color": "#000",
            "flex": 1,
            "fontSize": 17,
            "height": 50,
            "paddingLeft": 8,
            "paddingRight": 5,
            "top": 1.5,
          }
        }
        underlineColorAndroid="rgba(0,0,0,0)"
        value={null}
      />
      <Text
        active={true}
        allowFontScaling={false}
        onPress={[Function]}
        style={
          Array [
            Object {
              "color": undefined,
              "fontSize": 12,
            },
            Array [
              Object {
                "color": "#000",
                "fontSize": 30,
              },
              Object {
                "color": "#000",
                "fontSize": 24,
                "paddingLeft": 10,
                "paddingRight": 8,
              },
            ],
            Object {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    bounces={false}
    contentContainerStyle={
      Object {
        "paddingTop": 64,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    overScrollMode="never"
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={10}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "elevation": -1,
        "height": "100%",
        "zIndex": 0,
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingTop": 50,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#9e9e9e",
              "fontSize": 16,
              "fontWeight": "500",
            }
          }
        >
          Вы пока ничего не добавили в избранное
        </Text>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
