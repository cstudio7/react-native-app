// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders list correctly 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  data={
    Array [
      Object {
        "data": Array [
          Object {
            "id": 1,
            "name": "artur",
          },
          Object {
            "id": 2,
            "name": "alex",
          },
        ],
        "title": "a",
      },
      Object {
        "data": Array [
          Object {
            "id": 3,
            "name": "pierre",
          },
        ],
        "title": "p",
      },
    ]
  }
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={
    Array [
      Object {
        "data": Array [
          Object {
            "id": 1,
            "name": "artur",
          },
          Object {
            "id": 2,
            "name": "alex",
          },
        ],
        "title": "a",
      },
      Object {
        "data": Array [
          Object {
            "id": 3,
            "name": "pierre",
          },
        ],
        "title": "p",
      },
    ]
  }
  stickyHeaderIndices={
    Array [
      0,
      4,
    ]
  }
  stickySectionHeadersEnabled={true}
  style={
    Object {
      "backgroundColor": "#fff",
    }
  }
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fff",
            "paddingLeft": 16,
            "paddingRight": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "#fff",
              "color": "#979797",
              "fontSize": 15,
              "fontWeight": "500",
              "marginBottom": 1,
              "paddingBottom": 8,
            }
          }
        >
          a
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginLeft": 16,
            "marginRight": 16,
          }
        }
      >
        <View
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.15)",
              "borderTopWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View>
            <Text
              style={
                Object {
                  "fontSize": 19,
                  "marginTop": 16,
                }
              }
            >
              artur
            </Text>
            <Text
              style={
                Object {
                  "color": "#979797",
                  "fontSize": 14,
                  "marginBottom": 16,
                  "marginTop": 4,
                }
              }
            />
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
                "paddingBottom": 24,
                "paddingLeft": 24,
                "paddingTop": 28,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#7A62A4",
                    "fontSize": 22,
                    "marginRight": 8,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginLeft": 16,
            "marginRight": 16,
          }
        }
      >
        <View
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.15)",
              "borderTopWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View>
            <Text
              style={
                Object {
                  "fontSize": 19,
                  "marginTop": 16,
                }
              }
            >
              alex
            </Text>
            <Text
              style={
                Object {
                  "color": "#979797",
                  "fontSize": 14,
                  "marginBottom": 16,
                  "marginTop": 4,
                }
              }
            />
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
                "paddingBottom": 24,
                "paddingLeft": 24,
                "paddingTop": 28,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#7A62A4",
                    "fontSize": 22,
                    "marginRight": 8,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        style={
          Object {
            "backgroundColor": "#fff",
            "paddingLeft": 16,
            "paddingRight": 16,
          }
        }
      >
        <Text
          style={
            Object {
              "backgroundColor": "#fff",
              "color": "#979797",
              "fontSize": 15,
              "fontWeight": "500",
              "marginBottom": 1,
              "paddingBottom": 8,
            }
          }
        >
          p
        </Text>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    >
      <View
        accessible={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "marginLeft": 16,
            "marginRight": 16,
          }
        }
      >
        <View
          style={
            Object {
              "borderColor": "rgba(0, 0, 0, 0.15)",
              "borderTopWidth": 1,
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "space-between",
            }
          }
        >
          <View>
            <Text
              style={
                Object {
                  "fontSize": 19,
                  "marginTop": 16,
                }
              }
            >
              pierre
            </Text>
            <Text
              style={
                Object {
                  "color": "#979797",
                  "fontSize": 14,
                  "marginBottom": 16,
                  "marginTop": 4,
                }
              }
            />
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
                "paddingBottom": 24,
                "paddingLeft": 24,
                "paddingTop": 28,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Object {
                    "color": "#7A62A4",
                    "fontSize": 22,
                    "marginRight": 8,
                  },
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      onLayout={[Function]}
      style={null}
    />
  </View>
</RCTScrollView>
`;

exports[`shows blank state if list is empty 1`] = `
<RCTScrollView
  ListEmptyComponent={[Function]}
  data={Array []}
  disableVirtualization={false}
  getItem={[Function]}
  getItemCount={[Function]}
  horizontal={false}
  initialNumToRender={10}
  keyExtractor={[Function]}
  maxToRenderPerBatch={10}
  onContentSizeChange={[Function]}
  onEndReachedThreshold={2}
  onLayout={[Function]}
  onMomentumScrollEnd={[Function]}
  onScroll={[Function]}
  onScrollBeginDrag={[Function]}
  onScrollEndDrag={[Function]}
  renderItem={[Function]}
  renderSectionHeader={[Function]}
  scrollEventThrottle={50}
  sections={Array []}
  stickyHeaderIndices={Array []}
  stickySectionHeadersEnabled={true}
  style={
    Object {
      "backgroundColor": "#fff",
    }
  }
  updateCellsBatchingPeriod={50}
  windowSize={21}
>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
          "paddingTop": 50,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#938AA4",
            "fontSize": 16,
            "fontWeight": "500",
          }
        }
      >
        Вы пока ничего не добавили в избранное
      </Text>
    </View>
  </View>
</RCTScrollView>
`;
